"use strict";(self.webpackChunkarclix_docs=self.webpackChunkarclix_docs||[]).push([[446],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,d=m["".concat(l,".").concat(u)]||m[u]||f[u]||r;return n?o.createElement(d,i(i({ref:t},s),{},{components:n})):o.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5142:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));const r={},i="Configure Arclix",p={unversionedId:"config",id:"config",title:"Configure Arclix",description:"Configure Arclix component generation by creating arclix.config.json either manually or by using the following command:",source:"@site/docs/config.md",sourceDirName:".",slug:"/config",permalink:"/arclix-docs/docs/config",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Example Component",permalink:"/arclix-docs/docs/component-generation/example"}},l={},c=[{value:"Default Options",id:"default-options",level:3},{value:"Configure template property",id:"configure-template-property",level:3},{value:"Override the options for generating a certain component",id:"override-the-options-for-generating-a-certain-component",level:3}],s={toc:c},m="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configure-arclix"},"Configure Arclix"),(0,a.kt)("p",null,"Configure ",(0,a.kt)("inlineCode",{parentName:"p"},"Arclix")," component generation by creating ",(0,a.kt)("inlineCode",{parentName:"p"},"arclix.config.json")," either manually or by using the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx arclix@latest init\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The config file contains default options for ",(0,a.kt)("inlineCode",{parentName:"p"},"component generation")," that is shared across the project."),(0,a.kt)("p",{parentName:"admonition"},"If you need to add certain options only while generating a specific component you can still uses the available ",(0,a.kt)("a",{parentName:"p",href:"./component-generation/option#flags"},"flags")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"override")," the configs ",(0,a.kt)("inlineCode",{parentName:"p"},"temporarily")," for that specific generation.")),(0,a.kt)("h3",{id:"default-options"},"Default Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "generate": {\n        "flat": false,\n        "addIndex": false,\n        "skipTest": false,\n        "scopeStyle": false,\n        "template": "tsx",\n        "defaultPath": "./"\n    }\n}\n')),(0,a.kt)("p",null,"Look into ",(0,a.kt)("a",{parentName:"p",href:"./component-generation/option#flags"},"options")," for the usage and description of the available options."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Make sure to provide ",(0,a.kt)("strong",{parentName:"p"},"realtive path")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"defaultPath")," option."),(0,a.kt)("p",{parentName:"admonition"},"For example: If you want the ",(0,a.kt)("inlineCode",{parentName:"p"},"defaultPath")," to be ",(0,a.kt)("inlineCode",{parentName:"p"},"components")," then the property ",(0,a.kt)("inlineCode",{parentName:"p"},"defaultPath")," should look like:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"defaultPath": "./src/components"\n'))),(0,a.kt)("h3",{id:"configure-template-property"},"Configure template property"),(0,a.kt)("p",null,"By default ",(0,a.kt)("inlineCode",{parentName:"p"},"TypeScript")," is the template for component generation but user can configure it using ",(0,a.kt)("inlineCode",{parentName:"p"},"template")," property in config if they want ",(0,a.kt)("inlineCode",{parentName:"p"},"JavaScript")," as the template."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"User can't configure the template for specific component generation using ",(0,a.kt)("inlineCode",{parentName:"p"},"flags"),"."),(0,a.kt)("p",{parentName:"admonition"},"Template is a global property and it can be configured only through ",(0,a.kt)("strong",{parentName:"p"},"config file")," which is common for all component generation in the project.")),(0,a.kt)("h3",{id:"override-the-options-for-generating-a-certain-component"},"Override the options for generating a certain component"),(0,a.kt)("p",null,"You can ",(0,a.kt)("inlineCode",{parentName:"p"},"override")," the options in ",(0,a.kt)("inlineCode",{parentName:"p"},"arclix.config.json"),", if you want some ",(0,a.kt)("inlineCode",{parentName:"p"},"options")," needed only for generating a certain component by adding the ",(0,a.kt)("a",{parentName:"p",href:"./component-generation/option#flags"},"flags"),"."),(0,a.kt)("p",null,"For example: If you want ",(0,a.kt)("inlineCode",{parentName:"p"},"Contact")," to go in ",(0,a.kt)("inlineCode",{parentName:"p"},"pages")," folder but you have configured ",(0,a.kt)("inlineCode",{parentName:"p"},"defaultPath")," in config file to ",(0,a.kt)("inlineCode",{parentName:"p"},"./src/components/")," then you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"--path")," flag to ",(0,a.kt)("inlineCode",{parentName:"p"},"override")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"defaultPath")," ",(0,a.kt)("strong",{parentName:"p"},"temporarily")," only for that component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'npx arclix@latest g c Contact --path="./src/pages/"\n')))}f.isMDXComponent=!0}}]);