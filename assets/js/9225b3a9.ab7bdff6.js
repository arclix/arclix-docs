"use strict";(self.webpackChunkarclix_docs=self.webpackChunkarclix_docs||[]).push([[446],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},f="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),f=c(t),u=r,d=f["".concat(l,".").concat(u)]||f[u]||m[u]||a;return t?o.createElement(d,i(i({ref:n},s),{},{components:t})):o.createElement(d,i({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[f]="string"==typeof e?e:r,i[1]=p;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5142:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const a={},i="Configure Arclix",p={unversionedId:"config",id:"config",title:"Configure Arclix",description:"Configure Arclix component generation by creating arclix.config.json either manually or by using the following command:",source:"@site/docs/config.md",sourceDirName:".",slug:"/config",permalink:"/arclix-docs/docs/config",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Example Component",permalink:"/arclix-docs/docs/component-generation/example"}},l={},c=[{value:"Default Options",id:"default-options",level:3},{value:"Configure template property",id:"configure-template-property",level:3},{value:"Override the options for generating a certain component",id:"override-the-options-for-generating-a-certain-component",level:3}],s={toc:c},f="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(f,(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configure-arclix"},"Configure Arclix"),(0,r.kt)("p",null,"Configure ",(0,r.kt)("inlineCode",{parentName:"p"},"Arclix")," component generation by creating ",(0,r.kt)("inlineCode",{parentName:"p"},"arclix.config.json")," either manually or by using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx arclix@latest init\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The config file contains default options for ",(0,r.kt)("inlineCode",{parentName:"p"},"component generation")," that is shared across the project."),(0,r.kt)("p",{parentName:"admonition"},"If you need to add certain options only while generating a specific component you can still uses the available ",(0,r.kt)("a",{parentName:"p",href:"./component-generation/option#flags"},"flags")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"override")," the configs ",(0,r.kt)("inlineCode",{parentName:"p"},"temporarily")," for that specific generation.")),(0,r.kt)("h3",{id:"default-options"},"Default Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "generate": {\n        "flat": false,\n        "addStory": false,\n        "addIndex": false,\n        "skipTest": false,\n        "scopeStyle": false,\n        "template": "tsx",\n        "defaultPath": "./"\n    }\n}\n')),(0,r.kt)("p",null,"Look into ",(0,r.kt)("a",{parentName:"p",href:"./component-generation/option#flags"},"options")," for the usage and description of the available options."),(0,r.kt)("h3",{id:"configure-template-property"},"Configure template property"),(0,r.kt)("p",null,"By default ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeScript")," is the template for component generation but user can configure it using ",(0,r.kt)("inlineCode",{parentName:"p"},"template")," property in config if they want ",(0,r.kt)("inlineCode",{parentName:"p"},"JavaScript")," as the template."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"User can't configure the template for specific component generation using ",(0,r.kt)("inlineCode",{parentName:"p"},"flags"),"."),(0,r.kt)("p",{parentName:"admonition"},"Template is a global property and it can be configured only through ",(0,r.kt)("strong",{parentName:"p"},"config file")," which is common for all component generation in the project.")),(0,r.kt)("h3",{id:"override-the-options-for-generating-a-certain-component"},"Override the options for generating a certain component"),(0,r.kt)("p",null,"You can ",(0,r.kt)("inlineCode",{parentName:"p"},"override")," the options in ",(0,r.kt)("inlineCode",{parentName:"p"},"arclix.config.json"),", if you want some ",(0,r.kt)("inlineCode",{parentName:"p"},"options")," needed only for generating a certain component by adding the ",(0,r.kt)("a",{parentName:"p",href:"./component-generation/option#flags"},"flags"),"."),(0,r.kt)("p",null,"For example: If you want ",(0,r.kt)("inlineCode",{parentName:"p"},"Contact")," to go in ",(0,r.kt)("inlineCode",{parentName:"p"},"pages")," folder but you have configured ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultPath")," in config file to ",(0,r.kt)("inlineCode",{parentName:"p"},"./src/components/")," then you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"--path")," flag to ",(0,r.kt)("inlineCode",{parentName:"p"},"override")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultPath")," ",(0,r.kt)("strong",{parentName:"p"},"temporarily")," only for that component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'npx arclix@latest g c Contact --path="./src/pages/"\n')))}m.isMDXComponent=!0}}]);